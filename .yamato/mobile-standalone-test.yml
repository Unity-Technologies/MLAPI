{% metadata_file .yamato/project.metafile %}
---

# Builds a player on mobile standalone platform and executes PlayMode tests of the NGO package in the Standalone build
# Only Package tests are being executed in the context of the default project
# For mobile devices it's necessary to split build and run phases
{% for project in projects.default -%}
{% for editor in validation_editors.all -%}
{% for platform in test_platforms.mobile_build -%}
build_{{ project.name }}_{{ editor }}_{{ platform.name }}:
  name: Build {{ project.name }} - [{{ editor }}, {{ platform.name }}]
  agent:
      type: {{ platform.type }}
      image: {{ platform.image }}
      flavor: {{ platform.flavor }}
{% if platform.model %}
      model: {{ platform.model }}
{% endif %}
  commands:
    # Installing tools
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
      
    # Installing editor
    - unity-downloader-cli {% if platform.extension == "arm64" %} --arch arm64 {% endif %} -u {{ editor }} -c Editor {% if backend == "il2cpp" %} -c il2cpp {% endif %} {% if platform.base == "mac" %} -c ios {% endif %} {% if platform.base == "win" %} -c android {% endif %} --fast --wait
    
    # Platform specific Build
{% if platform.base == "win" %}
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat 
    - python .yamato/disable-burst-if-requested.py --project-path {{ project.path }} --platform {{ platform.name }}
    - utr.bat --suite=playmode --platform={{ platform.standalone }} --editor-location=.Editor --testproject={{ project.path }} --player-save-path=build/players --artifacts_path=build/logs --scripting-backend=mono --build-only --extra-editor-arg=-batchmode --extra-editor-arg=-nographics --testfilter=Unity.Netcode.RuntimeTests
{% else %}
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
    - chmod +x ./utr
    - ./utr --artifacts_path=artifacts --testproject={{ project.path }} --editor-location=.Editor --suite=playmode --platform={{ platform.standalone }} --build-only --player-save-path=build/players --extra-editor-arg=-batchmode --extra-editor-arg=-nographics --testfilter=Unity.Netcode.RuntimeTests
{% endif %}

  artifacts:
    logs:
      paths:
      - '*.log'
      - '*.xml'
      - artifacts/**/*
      - testproject/Logs/**
      - testproject/Library/*.log
      - testproject/*.log
      - testproject/Builds/*.log
      - build/test-results/**
      - artifacts/**
      - build/players/**
  variables:
    CI: true
    ENABLE_BURST_COMPILATION: False
{% endfor -%}
{% endfor -%}
{% endfor -%}
  
  
{% for project in projects.default -%}
{% for editor in validation_editors.all -%}
{% for platform in test_platforms.mobile_test -%}
{% if platform.name == "Android" -%}
run_{{ project.name }}_tests_{{ editor }}_Android:
  name: Run {{ project.name }} Tests - [{{ editor }}, Android, mono]
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  # Skip repository cloning
  skip_checkout: true
  commands:
    # Download standalone UnityTestRunner
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
    # Connect to Android device
    - set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
    - start %ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%
    - start %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
    # Run the tests on the device
    - ./utr --suite=playmode  --platform=Android --editor-location=.Editor --testproject={{ project.path }} --player-load-path=build/players --artifacts_path=build/logs --scripting-backend=mono --reruncount=1 --player-connection-ip=%BOKKEN_HOST_IP%  --testfilter=Unity.Netcode.RuntimeTests
  artifacts:
    logs:
      paths:
        - '*.log'
        - '*.xml'
        - artifacts/**/*
        - testproject/Logs/**
        - testproject/Library/*.log
        - testproject/*.log
        - testproject/Builds/*.log
        - build/test-results/**
        - build/players/**
  dependencies:
    - .yamato/mobile-standalone-test.yml#build_{{ project.name }}_{{ editor }}_Android
{% endif -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
  
# iOS only supports Il2cpp scripting backend
{% for project in projects.default -%}
{% for editor in validation_editors.all -%}
{% for platform in test_platforms.mobile_build -%}
{% if platform.name == "iOS" -%}
run_{{ project.name }}_tests_{{ editor }}_iOS:
  name: Run {{ project.name }} Tests - [{{ editor }}, iOS, Il2cpp]
  agent:
      type: {{ platform.type }}
      image: {{ platform.image }}
      flavor: {{ platform.flavor }}
  commands:
    # Download standalone UnityTestRunner
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
    # Give UTR execution permissions
    - chmod +x ./utr
    # Run the tests on the device
    - ./utr -artifacts_path=artifacts --testproject={{ project.path }} --editor-location=.Editor --reruncount=1 --suite=playmode --platform=iOS --player-load-path=build/players --testfilter=Unity.Netcode.RuntimeTests
  artifacts:
    logs:
      paths:
      - '*.log'
      - '*.xml'
      - artifacts/**/*
      - testproject/Logs/**
      - testproject/Library/*.log
      - testproject/*.log
      - testproject/Builds/*.log
      - build/test-results/**
      - build/players/**
  # Set a dependency on the build job
  dependencies:
    - .yamato/mobile-standalone-test.yml#build_{{ project.name }}_{{ editor }}_iOS
{% endif -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
