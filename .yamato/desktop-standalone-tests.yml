{% metadata_file .yamato/project.metafile %}
---

# Builds a player on desktop standalone platform and executes PlayMode tests of the NGO package in the Standalone build
# Only Package tests are being executed in the context of the default project
{% for project in projects.default -%}
{% for platform in test_platforms.desktop -%}
{% for editor in validation_editors.all -%}
{% for backend in scripting_backends -%}
desktop_standalone_tests_{{ project.name }}_{{ platform.name }}_{{ backend }}_{{ editor }}:
  name : Standalone Tests - NGO {{ project.name }} - [{{ platform.name }}, {{ editor }}, {{ backend }}]
  agent:
    type: {% if platform.type == "Unity::VM::osx" %} {{ platform.type }} {% else %} {{ platform.type }}::GPU {% endif %}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
{% if platform.model %}
    model: {{ platform.model }}
{% endif %}
  commands:
    # Installing tools
{% if platform.name == "ubuntu" %}
    - sudo apt-get update -q
    - sudo apt install -qy imagemagick
{% endif %}
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
  
    # Platform specific UTR setup
    - |
{% if platform.name == "win" %}
      curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
{% else %}
      curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr && chmod +x utr
{% endif %}
    
    # Installing editor
    - unity-downloader-cli -u {{ editor }} -c Editor {% if backend == "il2cpp" %} -c il2cpp {% endif %} --fast --wait
    
    # Build Player
    - |
{% if platform.name == "win" %}
      utr --suite=playmode --platform={{ platform.standalone }} --editor-location=.Editor --testproject={{ project.path }} --player-save-path=build/players --artifacts_path=build/logs --scripting-backend={{ backend }} --reruncount=1 --clean-library-on-rerun --build-only --extra-editor-arg=-batchmode --extra-editor-arg=-nographics
{% else %}
      ./utr --suite=playmode --platform={{ platform.standalone }} --editor-location=.Editor --testproject={{ project.path }} --player-save-path=build/players --artifacts_path=build/logs --scripting-backend={{ backend }} --reruncount=1 --clean-library-on-rerun --build-only --extra-editor-arg=-batchmode --extra-editor-arg=-nographics
{% endif %} 
    
    # Run Standalone tests
    - |
{% if platform.name == "win" %}
      utr --suite=playmode --platform={{ platform.standalone }} --player-load-path=build/players --artifacts_path=build/test-results --scripting-backend={{ backend }} --testfilter=Unity.Netcode.RuntimeTests --reruncount=1 --clean-library-on-rerun --playergraphicsapi=Null
{% else %}
      ./utr --suite=playmode --platform={{ platform.standalone }} --player-load-path=build/players --artifacts_path=build/test-results --scripting-backend={{ backend }} --testfilter=Unity.Netcode.RuntimeTests --reruncount=1 --clean-library-on-rerun --playergraphicsapi=Null
{% endif %}      
      
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
        - "build/test-results/**"
  dependencies:
    - .yamato/project-pack.yml#project_pack_-_{{ project.name }}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
