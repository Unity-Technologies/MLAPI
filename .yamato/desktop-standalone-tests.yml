{% metadata_file .yamato/project.metafile %}
---

# Builds a player on desktop standalone platform and executes RuntimeTests (equivalent to PlayMode tests) of the NGO package in the Standalone build.
# Default project (testptoject) in this case is used as a context.
# Builds are made on each desktop platform as in project.metafile declaration
# Builds are made on each supported editor as in project.metafile declaration
# Builds are made with different scripting backends as in project.metafile declaration
# ARM64 architectures are for now not considered since Windows_arm64 is recommended to use only after builds (would require separation here) and when it comes to macOS_arm64 there is problem with OpenCL not being available
{% for project in projects.default -%}
{% for platform in test_platforms.desktop -%}
{% for editor in validation_editors.all -%}
{% for backend in scripting_backends -%}
desktop_standalone_tests_{{ project.name }}_{{ platform.name }}_{{ backend }}_{{ editor }}:
  name : Standalone Tests - NGO {{ project.name }} - [{{ platform.name }}, {{ editor }}, {{ backend }}]
  agent:
    type: {% if platform.name == "mac" %} {{ platform.type }} {% else %} {{ platform.type }}::GPU {% endif %}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
    # Installing tools
{% if platform.name == "ubuntu" %}
    - sudo apt-get update -q
    - sudo apt install -qy imagemagick
{% endif %}
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
  
    # Platform specific UTR setup
    - |
{% if platform.name == "win" %}
      curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
{% else %}
      curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr && chmod +x utr
{% endif %}
    
    # Installing editor
    - unity-downloader-cli -u {{ editor }} -c Editor {% if backend == "il2cpp" %} -c il2cpp {% endif %} --fast --wait
    
    # Build Player
    - |
{% if platform.name == "win" %} utr.bat {% else %} ./utr {% endif %} --suite=playmode --platform={{ platform.standalone }} --editor-location=.Editor --testproject={{ project.path }} --scripting-backend={{ backend }} --player-save-path=build/players --artifacts_path=build/logs --extra-editor-arg=-batchmode --extra-editor-arg=-nographics --reruncount=1 --clean-library-on-rerun
    
    # Run Standalone tests
    - |
{% if platform.name == "win" %} utr.bat {% else %} ./utr {% endif %} --suite=playmode --platform={{ platform.standalone }} --scripting-backend={{ backend }} --player-load-path=build/players --artifacts_path=build/test-results --testfilter=Unity.Netcode.RuntimeTests --playergraphicsapi=Null --reruncount=1 --clean-library-on-rerun
      
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
        - "build/test-results/**"
  dependencies:
    - .yamato/project-pack.yml#project_pack_-_{{ project.name }}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
