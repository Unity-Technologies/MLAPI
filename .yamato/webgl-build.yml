{% metadata_file .yamato/project.metafile %}
---

# Builds a player on WebGl standalone platform without executing any tests.
# This setup performs build-only validation since WebGL runs in browser and for tests to be executed we would need to 
# consider having a web server, browser automation and overall complex test setup.
# Default project (testptoject) in this case is used as a context.
# WebGL requires Il2cpp scripting backend so mono is not considered
# ARM64 architectures are not considered since Windows_arm64 is recommended to use only after builds and when it comes to macOS_arm64 there is problem with OpenCL not being available
# Builds are made on each desktop platform as in project.metafile declaration
{% for project in projects.default -%}
{% for platform in test_platforms.desktop -%}
{% for editor in validation_editors.all -%}
webgl_build_{{ project.name }}_{{ platform }}_{{ editor }}:
  name: WebGl Build - {{ project.name }} [{{ platform.name }}, {{ editor }}, il2cpp]
  agent:
    type: {% if platform.name == "mac" %} {{ platform.type }} {% else %} {{ platform.type }}::GPU {% endif %}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  commands:
    # Installing tools
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
      
    # Platform specific UTR setup
    - |
{% if platform.name == "win" %}
      curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
{% else %}
      curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr && chmod +x utr
{% endif %}
  
    # Disabling Burst
    - python .yamato/disable-burst-if-requested.py --project-path {{ project.path }} --platform WebGL
  
    # Installing editor
    - unity-downloader-cli -u {{ editor }} -c Editor -c webgl -c il2cpp -w --fast
  
    # Build Player
    - |
{% if platform.name == "win" %} 
      utr.bat --suite=playmode --platform=WebGL --scripting-backend=il2cpp --testproject={{ project.path }} --editor-location=.Editor --artifacts_path=build/test-results --player-save-path=build/players --extra-editor-arg=-batchmode --extra-editor-arg="-cloudEnvironment staging" --extra-editor-arg=-nographics --reruncount=1 --clean-library-on-rerun  --build-only
{% else %} 
      ./utr --suite=playmode --platform=WebGL --scripting-backend=il2cpp --testproject={{ project.path }} --editor-location=.Editor --artifacts_path=build/test-results --player-save-path=build/players --extra-editor-arg=-batchmode --extra-editor-arg="-cloudEnvironment staging" --extra-editor-arg=-nographics --reruncount=1 --clean-library-on-rerun  --build-only
{% endif %} 

  artifacts:
    logs:
      paths:
        - '*.log'
        - '*.xml'
        - {{ project.path }}/Logs/**
        - {{ project.path }}/Library/*.log
        - {{ project.path }}/*.log
        - {{ project.path }}/Builds/*.log
        - build/test-results/**/*
        - build/players/**
  variables:
    CI: true
    ENABLE_BURST_COMPILATION: False
{% endfor -%}
{% endfor -%}
{% endfor -%}
